extend type Query {
  getChallenge(id: ID!): Challenge
  getChallenges(filters: ChallengeFilters): [Challenge!]!
  getParticipations(filters: ParticipationFilters): [ChallengeParticipation!]!
  getParticipation(id: ID!): ChallengeParticipation
  getMarkings(participationId: ID!): [Marking!]!
  getUserTransferParticipation: ChallengeParticipation
}

extend type Mutation {
  createChallenge(challenge: CreateChallengeInput!): Challenge!
  updateChallenge(id: ID!, args: UpdateChallengeInput!): Challenge!
  deleteChallenge(id: ID!): Boolean!
  createParticipation(input: CreateParticipationInput!): ChallengeParticipation!
  updateParticipation(
    id: ID!
    input: UpdateParticipationInput!
  ): ChallengeParticipation!
  deleteParticipation(id: ID!): Boolean!
  addMarking(participationId: ID!, marking: MarkingCreateInput!): Marking!
  editMarking(id: ID!, marking: MarkingUpdateInput!): Marking!
  deleteMarking(id: ID!): Boolean!
  transferUserMarkings(challengeId: ID!): Boolean!
}

enum ChallengeStatus {
  SUGGESTION
  UPCOMING
  ACTIVE
  ENDED
}

type Challenge {
  id: ID!
  name: String!
  description: String!
  status: ChallengeStatus!
  creator: User!
  isPrivate: Boolean!
  createdAt: Date!
  startDate: Date
  endDate: Date
  photoUrl: String
  participations: [ChallengeParticipation!]!
}

type ChallengeParticipation {
  id: ID!
  challenge: Challenge!
  user: User!
  markings: [Marking!]!
  isPrivate: Boolean!
  createdAt: Date!
  startDate: Date!
  endDate: Date!
}

input CreateChallengeInput {
  name: String!
  description: String!
  isPrivate: Boolean!
  startDate: Date
  endDate: Date
  photoUrl: String
}

input UpdateChallengeInput {
  name: String
  description: String
  isPrivate: Boolean
  startDate: Date
  endDate: Date
  photoUrl: String
}

input CreateParticipationInput {
  challengeId: ID!
  isPrivate: Boolean!
  startDate: Date!
  endDate: Date!
}

input UpdateParticipationInput {
  isPrivate: Boolean
  startDate: Date
  endDate: Date
}

type Marking {
  id: ID!
  date: Date!
  rating: Int!
  isPrivate: Boolean!
  comment: String
  photoUrl: String
}

input MarkingCreateInput {
  rating: Int!
  isPrivate: Boolean!
  comment: String
  date: Date
  photoUrl: String
}

input MarkingUpdateInput {
  isPrivate: Boolean
  rating: Int
  comment: String
  date: Date
  photoUrl: String
}

input ChallengeFilters {
  creatorName: ID
  status: ChallengeStatus
  startDate: DateFilter
  endDate: DateFilter
}

input ParticipationFilters {
  participantName: ID
  startDate: DateFilter
  endDate: DateFilter
}
