generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model Quote {
  id    String @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  quote String @db.VarChar(254)
}

model Challenge {
  id                     String                   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  created_at             DateTime                 @default(now()) @db.Timestamptz(6)
  name                   String                   @unique @db.VarChar(254)
  description            String
  creator_name           String                   @db.VarChar(254)
  is_private             Boolean                  @default(true)
  start_date             DateTime?                @db.Timestamptz(6)
  end_date               DateTime?                @db.Timestamptz(6)
  User                   User                     @relation(fields: [creator_name], references: [name])
  ChallengeParticipation ChallengeParticipation[]
}

model User {
  name                                String                   @id @db.VarChar(254)
  password                            String                   @db.VarChar(254)
  is_private                          Boolean                  @default(true)
  email                               String?                  @unique @db.Citext
  is_email_verified                   Boolean                  @default(false)
  created_at                          DateTime                 @default(now()) @db.Timestamptz(6)
  finished_and_checked_participations String[]                 @db.Uuid
  has_checked_latest_update           Boolean                  @default(false)
  Challenge                           Challenge[]
  ChallengeParticipation              ChallengeParticipation[]
}

model ChallengeParticipation {
  id           String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  is_private   Boolean   @default(true)
  created_at   DateTime  @default(now()) @db.Timestamptz(6)
  challenge_id String    @db.Uuid
  user_name    String    @db.VarChar(254)
  start_date   DateTime? @db.Timestamptz(6)
  end_date     DateTime? @db.Timestamptz(6)
  Challenge    Challenge @relation(fields: [challenge_id], references: [id])
  User         User      @relation(fields: [user_name], references: [name])
  Marking      Marking[]
}

model Marking {
  id                     String                 @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  date                   DateTime               @db.Timestamptz(6)
  participation_id       String                 @db.Uuid
  rating                 Int
  comment                String?                @db.VarChar(2000)
  photo_url              String?                @db.VarChar(254)
  is_private             Boolean                @default(true)
  ChallengeParticipation ChallengeParticipation @relation(fields: [participation_id], references: [id])
}
